"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8885],{35318:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>v});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,v=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(v,i(i({ref:t},c),{},{components:a})):n.createElement(v,i({ref:t},c))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},76663:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(25773),r=(a(27378),a(35318));const o={title:"Development Gateway",sidebar_position:1e3,description:"Learn how to use the DeviceScript cloud agnostic API to send and receive JSON messages, connect to the Development Gateway, and utilize application telemetry and message queues.",keywords:["DeviceScript","cloud API","JSON messages","Development Gateway","application telemetry"]},i="Development Gateway",l={unversionedId:"developer/development-gateway/index",id:"developer/development-gateway/index",title:"Development Gateway",description:"Learn how to use the DeviceScript cloud agnostic API to send and receive JSON messages, connect to the Development Gateway, and utilize application telemetry and message queues.",source:"@site/docs/developer/development-gateway/index.mdx",sourceDirName:"developer/development-gateway",slug:"/developer/development-gateway/",permalink:"/devicescript/developer/development-gateway/",draft:!1,tags:[],version:"current",sidebarPosition:1e3,frontMatter:{title:"Development Gateway",sidebar_position:1e3,description:"Learn how to use the DeviceScript cloud agnostic API to send and receive JSON messages, connect to the Development Gateway, and utilize application telemetry and message queues.",keywords:["DeviceScript","cloud API","JSON messages","Development Gateway","application telemetry"]},sidebar:"tutorialSidebar",previous:{title:"Blues.io Notecard",permalink:"/devicescript/developer/iot/blues-io/"},next:{title:"Messages",permalink:"/devicescript/developer/development-gateway/messages"}},p={},s=[{value:"Usage",id:"usage",level:2},{value:"Development Gateway",id:"development-gateway-1",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development-gateway"},"Development Gateway"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@devicescript/cloud")," ",(0,r.kt)("a",{parentName:"p",href:"/developer/packages"},"builtin package")," provides a cloud agnostic device to cloud API\nthat allows to send and receive small JSON messages to an online gateway.\nThe gateway can route the messages into any further cloud service."),(0,r.kt)("p",null,"As a proof of concept, DeviceScript can be connected to the Development Gateway."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This API is only supported on ESP32 devices currently.")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/developer/development-gateway/telemetry"},"Application Telemetry"),", track application usage and errors"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/developer/development-gateway/messages"},"Message queues"),", upload and subscribe to message queues")),(0,r.kt)("h2",{id:"development-gateway-1"},"Development Gateway"),(0,r.kt)("p",null,"This package relies on a prototype Development Gateway that needs to be deployed prior to using it."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/developer/development-gateway/gateway"},"Development Gateway"))))}u.isMDXComponent=!0}}]);